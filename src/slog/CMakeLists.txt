cmake_minimum_required(VERSION 2.6)
PROJECT(slog)

# FIND_PACKAGE(log4cxx REQUIRED)

AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR} SRC_LIST)

SET(CMAKE_MACOSX_RPATH 1)
SET(LIBRARY_OUTPUT_PATH ${CMAKE_CURRENT_BINARY_DIR}/lib)

ADD_DEFINITIONS( -g -W -Wall -D_REENTRANT -D_FILE_OFFSET_BITS=64 -DAC_HAS_INFO
-DAC_HAS_WARNING -DAC_HAS_ERROR -DAC_HAS_CRITICAL -DTIXML_USE_STL
-DAC_HAS_DEBUG -DLINUX_DAEMON)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
LINK_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR}/lib)

# for log4cxx include and lib
INCLUDE_DIRECTORIES(/usr/local/include)
LINK_DIRECTORIES(/usr/local/lib)

ADD_LIBRARY(slog_so SHARED ${SRC_LIST})
TARGET_LINK_LIBRARIES(slog_so log4cxx)
SET_TARGET_PROPERTIES(slog_so PROPERTIES OUTPUT_NAME "slog")

ADD_LIBRARY(slog_a STATIC ${SRC_LIST})
TARGET_LINK_LIBRARIES(slog_a log4cxx)
SET_TARGET_PROPERTIES(slog_a PROPERTIES OUTPUT_NAME "slog")


INCLUDE (${CMAKE_CURRENT_SOURCE_DIR}/../cmake/check_function.cmake)

# log4cxx.properties OUTPUT
SET(LOGCONF_SRC ${CMAKE_CURRENT_SOURCE_DIR}/log4cxx.properties)
SET(LOGCONF_DST ${PROJECT_BINARY_DIR}/log4cxx.properties)
ADD_CUSTOM_TARGET(logconf ALL)
makeCopy(${LOGCONF_SRC} ${LOGCONF_DST} logconf)

# EXAMPLE
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR})

AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/example EXAMPLE_SRC_LIST)

ADD_EXECUTABLE(slogtest ${EXAMPLE_SRC_LIST})
TARGET_LINK_LIBRARIES(slogtest slog_a)
